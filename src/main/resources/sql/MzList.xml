<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgcns.tct_backend.MzList.Repository.MzListRepository">
    <select id="selectMzListByListId" parameterType="String" resultType="MzList">
        <![CDATA[
            SELECT  /* user.selectUser */
                    LIST_ID,
                    USER_ID,
                    LIST_NAME ,
                    CREATED_DATE
              FROM  TB_MZ_LIST
             WHERE  LIST_ID = #{listId}
        ]]>
    </select>

    <resultMap id = "MzListWithRestaurantsMap" type = "MzListWithRestaurantsResponse">
        <id column = "LIST_ID" property="listId" />
        <result column="LIST_NAME" property="listName" />
        <collection property="restaurants" resultMap="RestaurantsMap" />
    </resultMap>

    <resultMap id = "RestaurantsMap" type = "RestaurantResponse">
        <id column = "RESTAURANT_ID" property="restaurantId" />
        <result column="RESTAURANT_NAME" property="restaurantName" />
        <result column="RESTAURANT_ADDRESS" property="restaurantAddress" />
        <result column="RESTAURANT_CATEGORY" property="restaurantCategory" />
    </resultMap>

    <select id="selectMzListWithRestaurants" resultMap = "MzListWithRestaurantsMap">
        <![CDATA[
            SELECT /* selectMzListWithRestaurants */
                   mzlist.LIST_ID,
                   mzlist.LIST_NAME,
                   res.RESTAURANT_ID,
                   res.RESTAURANT_NAME,
                   res.RESTAURANT_ADDRESS,
                   res.RESTAURANT_CATEGORY
            FROM TB_MZ_LIST mzlist
            LEFT JOIN TB_MZ_LIST_RESTAURANT_REL rel ON mzlist.LIST_ID = rel.LIST_ID
            LEFT JOIN TB_RESTAURANT res ON rel.RESTAURANT_ID = res.RESTAURANT_ID AND res.OPERATION_YN = 'Y'
            WHERE mzlist.LIST_ID = #{listId}
        ]]>
    </select>

    <insert id="createMzList" parameterType="MzList">
        <![CDATA[
            INSERT INTO TB_MZ_LIST
                (LIST_ID, USER_ID, LIST_NAME, CREATED_DATE)
            VALUES
                (#{listId}, #{userId}, #{listName}, #{createdDate})
        ]]>
    </insert>

    <select id="selectEnrolledYnRestaurants" parameterType="String" resultType="EnrolledYnRestuarant">
        <![CDATA[
            SELECT
                res.RESTAURANT_ID,
                res.RESTAURANT_NAME,
                CASE WHEN rel.RESTAURANT_ID IS NOT NULL THEN 'Y' ELSE 'N' END as ENROLLED_YN
            FROM TB_RESTAURANT res
            LEFT JOIN TB_MZ_LIST_RESTAURANT_REL rel ON rel.RESTAURANT_ID = res.RESTAURANT_ID 
                                                    AND rel.LIST_ID = #{listId}
            WHERE res.OPERATION_YN = 'Y'
        ]]>
    </select>

    <select id="selectEnrolledRel" parameterType="String" resultType="EnrolledRel">
        <![CDATA[
            SELECT
                res.RESTAURANT_ID,
                rel.RESTAURANT_LIST_REL_ID,
                CASE WHEN rel.RESTAURANT_ID IS NOT NULL THEN 'Y' ELSE 'N' END as ENROLLED_YN
            FROM TB_RESTAURANT res
            LEFT JOIN TB_MZ_LIST_RESTAURANT_REL rel ON rel.RESTAURANT_ID = res.RESTAURANT_ID 
                                                    AND rel.LIST_ID = #{listId}
            WHERE res.OPERATION_YN = 'Y'
        ]]>
    </select>

    <insert id = "createMzListRestaurantRels" parameterType="java.util.List">
        INSERT INTO TB_MZ_LIST_RESTAURANT_REL
            (RESTAURANT_LIST_REL_ID, RESTAURANT_ID, LIST_ID)
        VALUES
            <foreach item="item" collection="list" separator=" , ">
                (#{item.restaurantListRelId}, #{item.restaurantId}, #{item.listId})
            </foreach>
    </insert>

    <delete id = "deleteMzListRestaurantRels" parameterType="java.util.List">
        DELETE FROM TB_MZ_LIST_RESTAURANT_REL
        <where> 
            RESTAURANT_LIST_REL_ID IN
            <foreach collection="list" item="item" index="index" separator="," open="(" close=")"> 
                #{item}
            </foreach> 
	    </where> 
    </delete>
</mapper>